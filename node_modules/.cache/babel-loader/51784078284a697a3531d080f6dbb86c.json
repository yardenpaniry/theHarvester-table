{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D9\\u05E8\\u05D3\\u05DF \\u05E4\\u05E0\\u05D9\\u05E8\\u05D9\\\\Desktop\\\\PTBOX\\\\pt-box\\\\src\\\\components\\\\PTtable.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport theHarvesterOutput from '../theHarvesterOutput.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PTtable() {\n  _s();\n\n  const [data, setdata] = useState(theHarvesterOutput);\n  const [order, setorder] = useState(\"ASC\");\n\n  const sorting = col => {\n    if (order === \"ASC\") {\n      const sorted = [...data].sort((a, b) => a[col].toLowerCase() > b[col].toLowerCase() ? 1 : -1);\n      setdata(sorted);\n      setorder(\"DSC\");\n    }\n\n    if (order === \"DSC\") {\n      const sorted = [...data].sort((a, b) => a[col].toLowerCase() < b[col].toLowerCase() ? 1 : -1);\n      setdata(sorted);\n      setorder(\"ASC\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table dataTable\",\n      id: \"dataTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => sorting(\"asset\"),\n          children: \"asset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => sorting(\"IP_Address\"),\n          children: \"IP address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(d => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.asset\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.IP_Address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 33\n          }, this)]\n        }, d.asset, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PTtable, \"Om3UToNgCgeO9g7T9scab0pg+IE=\");\n\n_c = PTtable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PTtable\");","map":{"version":3,"sources":["C:/Users/ירדן פנירי/Desktop/PTBOX/pt-box/src/components/PTtable.js"],"names":["useState","theHarvesterOutput","PTtable","data","setdata","order","setorder","sorting","col","sorted","sort","a","b","toLowerCase","map","d","asset","IP_Address"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;;AAEA,eAAe,SAASC,OAAT,GAAkB;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAACC,kBAAD,CAAhC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,KAAD,CAAlC;;AACA,QAAMO,OAAO,GAAIC,GAAD,IAAQ;AACpB,QAAGH,KAAK,KAAK,KAAb,EAAmB;AACf,YAAMI,MAAM,GAAG,CAAC,GAAGN,IAAJ,EAAUO,IAAV,CAAe,CAACC,CAAD,EAAGC,CAAH,KAC9BD,CAAC,CAACH,GAAD,CAAD,CAAOK,WAAP,KAAuBD,CAAC,CAACJ,GAAD,CAAD,CAAOK,WAAP,EAAvB,GAA8C,CAA9C,GAAkD,CAAC,CADpC,CAAf;AAIAT,MAAAA,OAAO,CAACK,MAAD,CAAP;AACAH,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;;AACD,QAAGD,KAAK,KAAK,KAAb,EAAmB;AACf,YAAMI,MAAM,GAAG,CAAC,GAAGN,IAAJ,EAAUO,IAAV,CAAe,CAACC,CAAD,EAAGC,CAAH,KAC9BD,CAAC,CAACH,GAAD,CAAD,CAAOK,WAAP,KAAuBD,CAAC,CAACJ,GAAD,CAAD,CAAOK,WAAP,EAAvB,GAA8C,CAA9C,GAAkD,CAAC,CADpC,CAAf;AAIAT,MAAAA,OAAO,CAACK,MAAD,CAAP;AACAH,MAAAA,QAAQ,CAAC,KAAD,CAAR;AACH;AACJ,GAjBD;;AAmBA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACI;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAmC,MAAA,EAAE,EAAC,WAAtC;AAAA,8BACI;AAAA,gCACI;AAAI,UAAA,OAAO,EAAE,MAAIC,OAAO,CAAC,OAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAI,UAAA,OAAO,EAAE,MAAIA,OAAO,CAAC,YAAD,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eASI;AAAA,kBAEQJ,IAAI,CAACW,GAAL,CAAUC,CAAD,iBACL;AAAA,kCACI;AAAA,sBACKA,CAAC,CAACC;AADP;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAA,sBACKD,CAAC,CAACE;AADP;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA,WAASF,CAAC,CAACC,KAAX;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GAtDuBd,O;;KAAAA,O","sourcesContent":["import { useState } from 'react'\r\nimport theHarvesterOutput from '../theHarvesterOutput.json'\r\n\r\nexport default function PTtable(){\r\n    const [data, setdata] = useState(theHarvesterOutput);\r\n    const [order, setorder] = useState(\"ASC\");\r\n    const sorting = (col) =>{\r\n        if(order === \"ASC\"){\r\n            const sorted = [...data].sort((a,b) => \r\n            a[col].toLowerCase() > b[col].toLowerCase() ? 1 : -1 \r\n            )\r\n\r\n            setdata(sorted);\r\n            setorder(\"DSC\");\r\n        }\r\n        if(order === \"DSC\"){\r\n            const sorted = [...data].sort((a,b) => \r\n            a[col].toLowerCase() < b[col].toLowerCase() ? 1 : -1 \r\n            )\r\n\r\n            setdata(sorted);\r\n            setorder(\"ASC\");\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <div className=\"container\">\r\n            <table className=\"table dataTable\" id=\"dataTable\">\r\n                <thead>\r\n                    <th onClick={()=>sorting(\"asset\")}>      \r\n                        asset\r\n                    </th>\r\n                    <th onClick={()=>sorting(\"IP_Address\")}>\r\n                        IP address\r\n                    </th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        data.map((d)=>(\r\n                            <tr key={d.asset} >\r\n                                <td>\r\n                                    {d.asset}\r\n                                </td>\r\n                                <td>\r\n                                    {d.IP_Address}\r\n                                </td>\r\n\r\n                            </tr>\r\n                        ))\r\n                    }\r\n\r\n                </tbody>\r\n            </table>\r\n            \r\n        \r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}