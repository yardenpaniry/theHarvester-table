{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u05D9\\u05E8\\u05D3\\u05DF \\u05E4\\u05E0\\u05D9\\u05E8\\u05D9\\\\Desktop\\\\PTBOX\\\\pt-box\\\\src\\\\components\\\\PTtable.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport theHarvesterOutput from '../theHarvesterOutput.json';\nimport { useTable, usePagination } from 'react-table';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PTtable() {\n  _s();\n\n  const [data, setdata] = useState(theHarvesterOutput);\n  const [order, setorder] = useState(\"ASC\");\n\n  const sorting = col => {\n    if (order === \"ASC\") {\n      const sorted = [...data].sort((a, b) => a[col].toLowerCase() > b[col].toLowerCase() ? 1 : -1);\n      setdata(sorted);\n      setorder(\"DSC\");\n    }\n\n    if (order === \"DSC\") {\n      const sorted = [...data].sort((a, b) => a[col].toLowerCase() < b[col].toLowerCase() ? 1 : -1);\n      setdata(sorted);\n      setorder(\"ASC\");\n    }\n  };\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    // Instead of using 'rows', we'll use page,\n    // which has only the rows for the active page\n    // The rest of these things are super handy, too ;)\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: {\n      pageIndex,\n      pageSize\n    }\n  } = useTable({\n    columns,\n    data,\n    initialState: {\n      pageIndex: 2\n    }\n  }, usePagination);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table dataTable\",\n      id: \"dataTable\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => sorting(\"asset\"),\n          children: \"asset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          onClick: () => sorting(\"IP_Address\"),\n          children: \"IP address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(d => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.asset\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: d.IP_Address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 33\n          }, this)]\n        }, d.asset, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      \"aria-label\": \"...\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        class: \"pagination\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"page-item disabled\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"page-link\",\n            children: \"Previous\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"page-link\",\n            href: \"#\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"page-item active\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"page-link\",\n            children: [\"2\", /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"sr-only\",\n              children: \"(current)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"page-link\",\n            href: \"#\",\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          class: \"page-item\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            class: \"page-link\",\n            href: \"#\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PTtable, \"+MrcreGsTAVRlTIZHiDh7boXf1M=\", false, function () {\n  return [useTable];\n});\n\n_c = PTtable;\n\nvar _c;\n\n$RefreshReg$(_c, \"PTtable\");","map":{"version":3,"sources":["C:/Users/ירדן פנירי/Desktop/PTBOX/pt-box/src/components/PTtable.jsx"],"names":["useState","theHarvesterOutput","useTable","usePagination","PTtable","data","setdata","order","setorder","sorting","col","sorted","sort","a","b","toLowerCase","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","state","pageIndex","pageSize","columns","initialState","map","d","asset","IP_Address"],"mappings":"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","sourcesContent":["import { useState } from 'react'\r\nimport theHarvesterOutput from '../theHarvesterOutput.json'\r\nimport { useTable, usePagination } from 'react-table'\r\n\r\n\r\nexport default function PTtable(){\r\n\r\n    const [data, setdata] = useState(theHarvesterOutput);\r\n    const [order, setorder] = useState(\"ASC\");\r\n    const sorting = (col) =>{\r\n        if(order === \"ASC\"){\r\n            const sorted = [...data].sort((a,b) => \r\n            a[col].toLowerCase() > b[col].toLowerCase() ? 1 : -1 \r\n            )\r\n\r\n            setdata(sorted);\r\n            setorder(\"DSC\");\r\n        }\r\n        if(order === \"DSC\"){\r\n            const sorted = [...data].sort((a,b) => \r\n            a[col].toLowerCase() < b[col].toLowerCase() ? 1 : -1 \r\n            )\r\n\r\n            setdata(sorted);\r\n            setorder(\"ASC\");\r\n        }\r\n    }\r\n\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        prepareRow,\r\n        page, // Instead of using 'rows', we'll use page,\r\n        // which has only the rows for the active page\r\n    \r\n        // The rest of these things are super handy, too ;)\r\n        canPreviousPage,\r\n        canNextPage,\r\n        pageOptions,\r\n        pageCount,\r\n        gotoPage,\r\n        nextPage,\r\n        previousPage,\r\n        setPageSize,\r\n        state: { pageIndex, pageSize },\r\n      } = useTable(\r\n        {\r\n          columns,\r\n          data,\r\n          initialState: { pageIndex: 2 },\r\n        },\r\n        usePagination\r\n      )\r\n    \r\n    return(\r\n        <div className=\"container\">\r\n            <table className=\"table dataTable\" id=\"dataTable\">\r\n                <thead>\r\n                    <th onClick={()=>sorting(\"asset\")}>      \r\n                        asset\r\n                    </th>\r\n                    <th onClick={()=>sorting(\"IP_Address\")}>\r\n                        IP address\r\n                    </th>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        data.map((d)=>(\r\n                            <tr key={d.asset} >\r\n                                <td>\r\n                                    {d.asset}\r\n                                </td>\r\n                                <td>\r\n                                    {d.IP_Address}\r\n                                </td>\r\n\r\n                            </tr>\r\n                        ))\r\n                    }\r\n\r\n                </tbody>\r\n            </table>\r\n            \r\n            <nav aria-label=\"...\">\r\n  <ul class=\"pagination\">\r\n    <li class=\"page-item disabled\">\r\n      <span class=\"page-link\">Previous</span>\r\n    </li>\r\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">1</a></li>\r\n    <li class=\"page-item active\">\r\n      <span class=\"page-link\">\r\n        2\r\n        <span class=\"sr-only\">(current)</span>\r\n      </span>\r\n    </li>\r\n    <li class=\"page-item\"><a class=\"page-link\" href=\"#\">3</a></li>\r\n    <li class=\"page-item\">\r\n      <a class=\"page-link\" href=\"#\">Next</a>\r\n    </li>\r\n  </ul>\r\n</nav>\r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}